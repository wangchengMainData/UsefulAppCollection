apply plugin: 'com.android.application'
def AAVersion='4.4.0'
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "wc.ym.jniencrypt"
        minSdkVersion 28
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        /**
         * 输出arm64-v8a
         */
        ndk{
            abiFilters "arm64-v8a"
        }
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
                //这里的包名和applicationId一致
                arguments = [
                        'resourcePackageName'  : android.defaultConfig.applicationId
                        , "androidManifestFile": "$projectDir/src/main/AndroidManifest.xml".toString()
                ]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    externalNativeBuild{
        ndkBuild{
            path 'jni/Android.mk'
        }
    }
    packagingOptions {
        pickFirst 'lib/arm64-v8a/libcrypto.so'
        pickFirst 'lib/arm64-v8a/libssl.so'
        pickFirst 'lib/arm64-v8a/libjni-demo.so'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation'com.journeyapps:zxing-android-embedded:3.0.2@aar'
    implementation'com.google.zxing:core:3.4.0'
    annotationProcessor group: 'org.androidannotations', name: 'androidannotations', version: "$AAVersion"
    implementation group: 'org.androidannotations', name: 'androidannotations-api', version: "$AAVersion"
}
